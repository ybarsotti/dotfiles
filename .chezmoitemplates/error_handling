{{/* chezmoi:template:missing-key=zero */}}
{{/* Standardized error handling for shell scripts */}}
{{- define "error_handling" -}}
# Standardized error handling
set -eufo pipefail

# Colors for output
readonly RED='\033[0;31m'
readonly GREEN='\033[0;32m'
readonly YELLOW='\033[1;33m'
readonly BLUE='\033[0;34m'
readonly NC='\033[0m' # No Color

# Logging functions
log_info() {
    echo -e "${BLUE}ℹ️  $*${NC}"
}

log_success() {
    echo -e "${GREEN}✅ $*${NC}"
}

log_warning() {
    echo -e "${YELLOW}⚠️  $*${NC}"
}

log_error() {
    echo -e "${RED}❌ $*${NC}" >&2
}

# Error handler function
error_handler() {
    local line_number="$1"
    local command="$2"
    local error_code="$3"
    log_error "Command failed at line ${line_number}: ${command}"
    log_error "Exit code: ${error_code}"
    exit "${error_code}"
}

# Trap errors
trap 'error_handler ${LINENO} "$BASH_COMMAND" $?' ERR

# Function to check if command exists
command_exists() {
    command -v "$1" &>/dev/null
}

# Function to check if a package is installed via Homebrew
brew_package_installed() {
    local package="$1"
    brew list --formula | grep -q "^${package}$" || brew list --cask | grep -q "^${package}$"
}

# Function to safely source a file if it exists
safe_source() {
    local file="$1"
    if [[ -f "$file" ]]; then
        # shellcheck source=/dev/null
        source "$file"
    fi
}
{{- end -}}