{{/* chezmoi:template:missing-key=zero */}}
# Load env vars
[ -f "$HOME/.zsh_env_vars" ] && source "$HOME/.zsh_env_vars"

# Terminal Setup (interactive shell specific)
export TERM="xterm-256color"

# Note: Core environment variables (EDITOR, XDG_CONFIG_HOME, LANG, GPG_TTY, compiler flags) 
# are now properly located in .zprofile

# Core Aliases
## Programming Languages
alias python=/usr/bin/python3 

## Development Tools
alias lg='lazygit'
alias ld="lazydocker"
alias vi="nvim"
alias vim="nvim"

## Git shortcuts (additional to gitconfig aliases)
alias gst="git status"
alias gco="git checkout"
alias gcb="git checkout -b"
alias gp="git pull"
alias gps="git push"
alias gd="git diff"
alias gds="git diff --staged"
alias gl="git log --oneline --graph"
alias gla="git log --oneline --graph --all"

## Terminal Enhancements
alias lseza='eza -l -a --icons --group-directories-first --color=always --icons=always --no-user'
alias c="clear"
alias e="exit"
alias zj="zellij"
alias zjls="zellij ls"

## Directory Navigation
{{- if eq .machine.purpose "personal" }}
alias dev="cd ~/Developer"
{{- end }}

## Debugging
alias chrome-debug="open -a 'Google Chrome' --args --remote-debugging-port=9222"

## Tree Views
alias tree="tree -L 3 -a -I '.git' --charset X "
alias dtree="tree -L 3 -a -d -I '.git' --charset X "

# Yazi
function y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}
export YAZI_CONFIG_HOME="$HOME/.config/yazi"

# Tmux which key
# NOTE: ESC + u
tmux-which-key() { tmux show-wk-menu-root ; }
zle -N tmux-which-key
bindkey -M vicmd "u" tmux-which-key

# Tmux Configuration
export TMUX_PLUGIN_MANAGER_PATH="$XDG_CONFIG_HOME/tmux/plugins"

# Tool Configurations

{{- if (lookPath "fzf") }}
## FZF - Fuzzy Finder
if eval "$(fzf --zsh)" 2>/dev/null; then
    export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"
    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
    export FZF_ALT_C_COMMAND="fd --type=d --hidden --strip-cwd-prefix --exclude .git"
    export FZF_DEFAULT_OPTS="--height 50% --layout=default --border --color=hl:#2dd4bf"
    export FZF_CTRL_T_OPTS="--preview 'bat --color=always -n --line-range :500 {}'"
    export FZF_ALT_C_OPTS="--preview 'eza --icons=always --tree --color=always {} | head -200'"
    export FZF_TMUX_OPTS=" -p90%,70% "
fi
{{- end }}

{{- if (lookPath "thefuck") }}
## The Fuck - Command Correction
eval $(thefuck --alias fuck 2>/dev/null)
{{- end }}

# Language Version Management:
# Note: mise activation is handled in .zprofile
# Note: nvm, uv configurations below

{{- if eq .chezmoi.os "darwin" }}
# Zsh Enhancements (optimized brew prefix lookup)
BREW_PREFIX="${BREW_PREFIX:-/opt/homebrew}"
if [[ -f "$BREW_PREFIX/share/zsh-autosuggestions/zsh-autosuggestions.zsh" ]]; then
    source "$BREW_PREFIX/share/zsh-autosuggestions/zsh-autosuggestions.zsh"
    typeset -g ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=12'
fi
if [[ -f "$BREW_PREFIX/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" ]]; then
    source "$BREW_PREFIX/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
fi
{{- end }}

# NVM - Node Version Manager (lazy loading for faster shell startup)
export NVM_DIR="$HOME/.nvm"

# Lazy load NVM - only load when needed
if [ -s "$NVM_DIR/nvm.sh" ]; then
    # Create alias functions that will load NVM on first use
    alias nvm='unalias nvm npm node npx && source "$NVM_DIR/nvm.sh" && nvm'
    alias npm='unalias nvm npm node npx && source "$NVM_DIR/nvm.sh" && npm'
    alias node='unalias nvm npm node npx && source "$NVM_DIR/nvm.sh" && node'
    alias npx='unalias nvm npm node npx && source "$NVM_DIR/nvm.sh" && npx'
fi

# Tool-specific Completions and Configurations

# Python Invoke completion
[ -f "$HOME/.invoke-completion.zsh" ] && source "$HOME/.invoke-completion.zsh"

# GitHub CLI copilot aliases
if command -v gh &>/dev/null; then
    eval "$(gh copilot alias -- zsh 2>/dev/null)"
fi

# Atuin - Shell History
if [[ -f "$HOME/.atuin/bin/env" ]]; then
    . "$HOME/.atuin/bin/env"
    eval "$(atuin init zsh 2>/dev/null)"
fi

{{- if (lookPath "zoxide") }}
# Zoxide - Smarter cd command
eval "$(zoxide init zsh)"
alias cd="z"
{{- end }}

{{- if (lookPath "direnv") }}
# Direnv - Load/unload environment variables per directory
eval "$(direnv hook zsh)"
{{- end }}

# Development Environment Setup

## Python debugger
export PYTHONBREAKPOINT="pudb.set_trace"

## Note: PATH for .local/bin and .cargo/bin are set in .zprofile

{{- if (lookPath "windsurf") }}
# Windsurf Editor
export PATH="$HOME/.codeium/windsurf/bin:$PATH"
{{- end }}

{{- if (lookPath "bun") }}
# Bun JavaScript Runtime
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"
[ -s "$HOME/.bun/_bun" ] && source "$HOME/.bun/_bun"
{{- end }}

{{- if (lookPath "pnpm") }}
# PNPM Package Manager
export PNPM_HOME="$HOME/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
{{- end }}

# Additional Tool Aliases
{{- if not (lookPath "claude") }}
# Claude Code alias (fallback to local installation if not in PATH)
if [[ -f "$HOME/.claude/local/claude" ]]; then
    alias claude="$HOME/.claude/local/claude"
elif command -v npx &>/dev/null; then
    alias claude="npx @anthropic-ai/claude-code"
fi
{{- end }}

# Missing Package Configurations

{{- if (lookPath "doppler") }}
# Doppler CLI completion
if [[ -d "$HOME/.doppler/completion/zsh" ]]; then
    fpath=("$HOME/.doppler/completion/zsh" $fpath)
fi
{{- end }}

{{- if (lookPath "commitizen") }}
# Commitizen aliases
alias gc="git cz"
alias gcz="git cz"
{{- end }}

# Performance benchmarking aliases
{{- if (lookPath "hyperfine") }}
alias bench="hyperfine"
alias quickbench="hyperfine --warmup 3"
{{- end }}

{{- if (lookPath "tokei") }}
# Code statistics shortcuts
alias codestat="tokei"
alias lines="tokei --files"
{{- end }}

# Google Cloud SDK
if [ -f "$HOME/google-cloud-sdk/path.zsh.inc" ]; then
    source "$HOME/google-cloud-sdk/path.zsh.inc"
fi
if [ -f "$HOME/google-cloud-sdk/completion.zsh.inc" ]; then
    source "$HOME/google-cloud-sdk/completion.zsh.inc"
fi

# Docker CLI completions
if [ -d "$HOME/.docker/completions" ]; then
    fpath=("$HOME/.docker/completions" $fpath)
fi

# Initialize completion system (must be after all fpath additions)
autoload -Uz compinit
compinit

# Tool completions that use compdef (must be after compinit)
{{- if (lookPath "gibo") }}
eval "$(gibo completion zsh 2>/dev/null)"
{{- end }}

# Prompt Setup (Must be last)
if [ "$TERM_PROGRAM" != "Apple_Terminal" ]; then
    # Use custom theme from XDG config directory
    CUSTOM_POSH_THEME="$HOME/.config/oh-my-posh/themes/catppuccin_macchiato.omp.json"
    FALLBACK_POSH_THEME="$BREW_PREFIX/share/oh-my-posh/themes/gruvbox.omp.json"

    if [[ -f "$CUSTOM_POSH_THEME" ]]; then
        eval "$(oh-my-posh init zsh --config $CUSTOM_POSH_THEME)"
    elif [[ -f "$FALLBACK_POSH_THEME" ]]; then
        eval "$(oh-my-posh init zsh --config $FALLBACK_POSH_THEME)"
    else
        # Fallback to default theme if neither is available
        eval "$(oh-my-posh init zsh --config 'https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/refs/heads/main/themes/catppuccin_mocha.omp.json')"
    fi
fi
